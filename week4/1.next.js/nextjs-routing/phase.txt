#1. 메인 페이지 렌더링
    app/page.js 를 통한 메인 페이지 렌더링 방식 이해

#2. 기본 라우팅
    localhost:3000/about
    localhost:3000/profile 경로로 접근하고 싶을 경우,

    라우팅과 관련된 파일 작성은 app/ 내부에 작성
    -> App router 메커니즘

    존재하지 않거나 잘못된 경로(abut, dashboard)로 요청 시, Next.js는 자동으로 기본 404 페이지를 응답함

#3. 중첩 라우팅(Nested)
    localhost:3000/blog -> 블로그의 메인 페이지
    localhost:3000/blog/cookie -> 쿠키와 관련된 포스팅 페이지
    localhost:3000/blog/milk -> 우유 관련된 포스팅 페이지

    폴더 경로를 중첩하여 작성하면 됨

#4. 동적 라우팅(Dynamic)

    localhost:3000/products -> product1
                               product2
                               product3

    만약 사용자가 localhost:3000/products/id -> id에 해당하는 특정 상품의 상세 페이지로 이동하도록
    ex) localhost:3000/products/1 -> Product 1 details
        localhost:3000/products/2 -> Product 2 details

    products/[productId]와 같이 '[]' 문법을 활용하여 동적으로 라우팅이 처리될 수 있도록 적용

#5. 중첩 동적 라우팅
    localhost:3000/products/1 -> 상품 1 상세 페이지
    localhost:3000/products/1/reviews/1 -> 상품 1의 1번째 리뷰

    + Next.js 15 버전 업그레이드에 따른 Dynamic API(params) 설정 적용
    Ref. https://nextjs.org/docs/messages/sync-dynamic-apis

    Q. products/[id]와 reviews/[id]와 같이 중첩된 단일 라우트에서 id변수를 동일하게 할 경우 ?
    변수명이 같아서 충돌 에러 발생, productId, reviewId로 작성해야함
#6. 모든 세그먼트 처리하기
    localhost:3-/docs/feature1/concept1